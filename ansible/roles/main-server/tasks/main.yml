---
- name: create the main server user
  user:
    name: main-server
    groups:
      - audio
      - video
    shell: /bin/bash

- name: install main server apt dependencies
  apt:
    name:
      - vim
      - git
      - python3
      - awscli
    update_cache: yes

# Have to use get-pip.py as apt's version throws errors.
# See https://stackoverflow.com/questions/37495375/python-pip-install-throws-typeerror-unsupported-operand-types-for-retry
- name: install pip using get-pip.py
  script: install_pip.sh

- name: install main server python dependencies
  pip:
    name:
      - awscli
      - pyyaml
      - flask
      - pytz
    state: latest
    executable: /usr/local/bin/pip3

# OPENCV

- name: opencv for stretch apt
  apt:
    name:
      # openCV devepencies
      - libopencv-dev
      - libatlas3-base
      - libjasper-dev
      - libgstreamer1.0-dev
      - libqtgstreamer-dev
    update_cache: yes
  when: main_server.opencv_install == "stretch"

- name: opencv for stretch pip
  pip:
    name:
      # This one takes a long time > 10 mins
      - opencv-python
    state: latest
    executable: /usr/local/bin/pip3
  when: main_server.opencv_install == "stretch"

- name: opencv via apt
  apt:
    name:
      - python3-opencv
    update_cache: yes
  when: main_server.opencv_install == "apt"

# Better gave game of thrones queued up, cuz this could take hours.
- name: opencv via source
  script: install_opencv.sh
  when: main_server.opencv_install == "source"

# END OPENCV

- name: create aws directory
  file:
    path: /home/main-server/.aws
    state: directory
    owner: main-server
    group: main-server

- name: copy aws config
  copy:
    src: "{{ playbook_dir }}/secrets/aws/config"
    dest: "/home/main-server/.aws/config"
    owner: main-server
    group: main-server
    mode: 0400

- name: copy aws credentials
  copy:
    src: "{{ playbook_dir }}/secrets/aws/credentials"
    dest: "/home/main-server/.aws/credentials"
    owner: main-server
    group: main-server
    mode: 0400

- name: create main server directory
  file:
    path: /home/main-server/main-server
    state: directory
    owner: main-server
    group: main-server

- name: create photos directory
  file:
    path: "/home/main-server/main-server/photos"
    state: directory
    owner: main-server
    group: main-server

- name: copy main server python code
  copy:
    src: "{{ playbook_dir }}/../main-server/python/"
    dest: "/home/main-server/main-server/python/"
    owner: main-server
    group: main-server
  notify:
    - restart main-server

- name: copy location main server config to main server directory
  copy:
    src: "{{ playbook_dir }}/vars/{{ main_server.location }}.yml"
    dest: "/home/main-server/main-server/config.yml"
    owner: main-server
    group: main-server
    mode: 0600
  notify:
    - restart main-server

- name: copy main-server systemd service unit file
  copy:
    src: "main-server.service"
    dest: "/etc/systemd/system/main-server.service"
  notify:
    - restart main-server
