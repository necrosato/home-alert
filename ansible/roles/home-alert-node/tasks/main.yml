---
- name: create the home alert user
  user:
    name: home-alert
    groups:
      - audio
      - video
    shell: /bin/bash

- name: install home alert node apt dependencies
  apt:
    name:
      - vim
      - git
      - python3
      - cron
    update_cache: yes

# Have to use get-pip.py as apt's version throws errors.
# See https://stackoverflow.com/questions/37495375/python-pip-install-throws-typeerror-unsupported-operand-types-for-retry
- name: install pip using get-pip.py
  script: install_pip.sh

- name: install home alert node python dependencies
  pip:
    name:
      - flask
      - pytz
    state: latest
    executable: /usr/local/bin/pip3

# OPENCV

- name: opencv for stretch apt
  apt:
    name:
      # openCV devepencies
      - libopencv-dev
      - libatlas3-base
      - libjasper-dev
      - libgstreamer1.0-dev
      # - libqtgstreamer-dev
    update_cache: yes
  when: home_alert_node.opencv_install == "stretch"

- name: opencv for stretch pip
  pip:
    name:
      # This one takes a long time > 10 mins
      - opencv-python
    state: latest
    executable: /usr/local/bin/pip3
  when: home_alert_node.opencv_install == "stretch"

- name: opencv via apt
  apt:
    name:
      - python3-opencv
    update_cache: yes
  when: home_alert_node.opencv_install == "apt"

# Better have game of thrones queued up, cuz this could take hours.
- name: opencv via source
  script: install_opencv.sh
  when: home_alert_node.opencv_install == "source"

# END OPENCV

- name: create home alert directory
  file:
    path: "{{ home_alert_dir }}"
    state: directory
    owner: home-alert
    group: home-alert

- name: create photos directory
  file:
    path: "{{ photos_dir }}"
    state: directory
    owner: home-alert
    group: home-alert

- name: copy home alert node python code
  copy:
    src: "{{ playbook_dir }}/../home-alert-node/python/"
    dest: "{{ home_alert_dir }}/python/"
    owner: home-alert
    group: home-alert
  notify:
    - restart home-alert

- name: copy location node config to home alert directory
  copy:
    src: "{{ playbook_dir }}/vars/{{ home_alert_node.location }}.yml"
    dest: "/home/home-alert/home-alert/config.yml"
    owner: home-alert
    group: home-alert
    mode: 0600
  notify:
    - restart home-alert

- name: copy home-alert systemd service unit file
  copy:
    src: "home-alert.service"
    dest: "/etc/systemd/system/home-alert.service"
  notify:
    - restart home-alert

- name: copy cleanup script to home alert directory
  copy:
    src: "clean_storage.sh"
    dest: "{{ home_alert_dir }}/clean_storage.sh"
    owner: home-alert
    group: home-alert

- name: cron job to run clean_storage.sh every night
  cron:
    name: "Cron job for cleaning storage"
    minute: "0"
    hour: "2"
    user: home-alert
    job: "{{ home_alert_dir }}/clean_storage.sh -d {{ photos_dir }} -n 7"

